<?xml version="1.0"?>
<project name="httpd 1.10.3" default="main" basedir=".">
  <!-- apr properties -->
  <property name="apr.file" value="apr-1.6.2.tar.bz2"/>
  <property name="apr.dir" value="apr-1.6.2"/>
  <!-- apr-util properties -->
  <property name="aprutil.file" value="apr-util-1.6.0.tar.bz2"/>
  <property name="aprutil.dir" value="apr-util-1.6.0"/>
  <!-- httpd properties -->
  <property name="httpd.file" value="httpd-2.4.25.tar.bz2"/>
  <property name="httpd.dir" value="httpd-2.4.25"/>
  <!-- pcre properties -->
  <property name="pcre.file" value="pcre-8.40.tar.bz2"/>
  <property name="pcre.dir" value="pcre-8.40"/>
  <!-- zlib properties -->
  <property name="zlib.file" value="zlib-1.2.11.tar.gz"/>
  <property name="zlib.dir" value="zlib-1.2.11"/>
  <!-- Project properties -->
  <property name="install.base" value="/sites/opt"/>
  <property name="install.dir" value="${install.base}/HTTPD/${httpd.dir}"/>
  <property name="openssl.dir" value="${install.base}/openssl"/>
  <property name="cflags" value="-Wl,-rpath,${install.dir}"/>
  <property name="cppflags" value="${cflags}"/>
  <!-- DO NOT MODIFY ANYTHING BELOW HERE -->
  <target name="main">
    <antcall target="sanitytest"/>
    <antcall target="clean"/>
    <antcall target="buildzlib"/>
    <antcall target="buildapr"/>
    <antcall target="buildaprutil"/>
    <antcall target="buildpcre"/>
    <antcall target="buildhttpd"/>
    <antcall target="clean"/>
  </target>
  <target name="sanitytest">
    <available file="${apr.file}" property="apr.file.exists"/>
    <available file="${aprutil.file}" property="aprutil.file.exists"/>
    <available file="${httpd.file}" property="httpd.file.exists"/>
    <available file="${pcre.file}" property="pcre.file.exists"/>
    <available file="${zlib.file}" property="zlib.file.exists"/>
    <fail message="${apr.file} does not exist" unless="apr.file.exists"/>
    <fail message="${aprutil.file} does not exist" unless="aprutil.file.exists"/>
    <fail message="${httpd.file} does not exist" unless="httpd.file.exists"/>
    <fail message="${pcre.file} does not exist" unless="pcre.file.exists"/>
    <fail message="${zlib.file} does not exist" unless="zlib.file.exists"/>
  </target>
  <target name="clean">
    <echo message="Removing build artifacts" level="info"/>
    <delete dir="${apr.dir}"/>
    <delete dir="${aprutil.dir}"/>
    <delete dir="${httpd.dir}"/>
    <delete dir="${pcre.dir}"/>
    <delete dir="${zlib.dir}"/>
  </target>
  <target name="buildapr">
    <echo message="Building ${apr.dir}" level="info"/>
    <echo message="Unpacking ${apr.file}" level="info"/>
    <exec executable="tar" failonerror="true">
      <arg value="-xf"/>
      <arg value="${apr.file}"/>
    </exec>
    <echo message="Configuring ${apr.dir}" level="info"/>
    <exec executable="bash" dir="${apr.dir}" failonerror="true">
      <env key="CFLAGS" value="${cflags}"/>
      <env key="CPPFLAGS" value="${cppflags}"/>
      <arg value="configure"/>
      <arg value="--prefix=${install.dir}"/>
      <arg value="--enable-threads"/>
    </exec>
    <echo message="Running 'make'" level="info"/>
    <exec executable="make" dir="${apr.dir}" failonerror="true">
      <arg value="-j8"/>
    </exec>
    <echo message="Running 'make check'" level="info"/>
    <exec executable="make" dir="${apr.dir}" failonerror="true">
      <arg value="check"/>
    </exec>
    <exec executable="make" dir="${apr.dir}" failonerror="true">
      <arg value="install"/>
    </exec>
  </target>
  <target name="buildaprutil">
    <echo message="Building ${aprutil.dir}" level="info"/>
    <echo message="Unpacking ${aprutil.file}" level="info"/>
    <exec executable="tar" failonerror="true">
      <arg value="-xf"/>
      <arg value="${aprutil.file}"/>
    </exec>
    <echo message="Configuring ${aprutil.dir}" level="info"/>
    <exec executable="bash" dir="${aprutil.dir}" failonerror="true">
      <env key="CFLAGS" value="${cflags}"/>
      <env key="CPPFLAGS" value="${cppflags}"/>
      <arg value="configure"/>
      <arg value="--prefix=${install.dir}"/>
      <arg value="--with-apr=${install.dir}"/>
      <arg value="--with-crypto"/>
      <arg value="--with-openssl=${openssl.dir}"/>
    </exec>
    <echo message="Running 'make'" level="info"/>
    <exec executable="make" dir="${aprutil.dir}" failonerror="true">
      <arg value="-j8"/>
    </exec>
    <echo message="Running 'make check'" level="info"/>
    <exec executable="make" dir="${aprutil.dir}" failonerror="true">
      <arg value="check"/>
    </exec>
    <echo message="Running 'make install'" level="info"/>
    <exec executable="make" dir="${aprutil.dir}" failonerror="true">
      <arg value="install"/>
    </exec>
  </target>
  <target name="buildhttpd">
    <echo message="Building ${httpd.dir}" level="info"/>
    <echo message="Unpacking ${httpd.file}" level="info"/>
    <exec executable="tar" failonerror="true">
      <arg value="-xf"/>
      <arg value="${httpd.file}"/>
    </exec>
    <echo message="Configuring ${httpd.dir}" level="info"/>
    <exec executable="bash" dir="${httpd.dir}" failonerror="true">
      <env key="CFLAGS" value="${cflags}"/>
      <env key="CPPFLAGS" value="${cppflags}"/>
      <arg value="configure"/>
      <arg value="--prefix=${install.dir}"/>
      <arg value="--enable-ssl"/>
      <arg value="--with-apr=${install.dir}"/>
      <arg value="--with-apr-util=${install.dir}"/>
      <arg value="--with-pcre=${install.dir}"/>
      <arg value="--with-z=${install.dir}"/>
      <arg value="--with-ssl=${openssl.dir}"/>
    </exec>
    <echo message="Running 'make'" level="info"/>
    <exec executable="make" dir="${httpd.dir}" failonerror="true">
      <arg value="-j8"/>
    </exec>
    <echo message="Running 'make install'" level="info"/>
    <exec executable="make" dir="${httpd.dir}" failonerror="true">
      <arg value="install"/>
    </exec>
  </target>
  <target name="buildpcre">
    <echo message="Building ${pcre.dir}" level="info"/>
    <echo message="Unpacking ${pcre.file}" level="info"/>
    <exec executable="tar" failonerror="true">
      <arg value="-xf"/>
      <arg value="${pcre.file}"/>
    </exec>
    <echo message="Configuring ${pcre.dir}" level="info"/>
    <exec executable="bash" dir="${pcre.dir}" failonerror="true">
      <env key="CFLAGS" value="${cflags}"/>
      <env key="CPPFLAGS" value="${cppflags}"/>
      <arg value="configure"/>
      <arg value="--prefix=${install.dir}"/>
      <arg value="--enable-pcre16"/>
      <arg value="--enable-pcre32"/>
      <arg value="--enable-jit"/>
      <arg value="--enable-utf"/>
    </exec>
    <echo message="Running 'make'" level="info"/>
    <exec executable="make" dir="${pcre.dir}" failonerror="true">
      <arg value="-j8"/>
    </exec>
    <echo message="Running 'make check'" level="info"/>
    <exec executable="make" dir="${pcre.dir}" failonerror="true">
      <arg value="check"/>
    </exec>
    <echo message="Running 'make install'" level="info"/>
    <exec executable="make" dir="${pcre.dir}" failonerror="true">
      <arg value="install"/>
    </exec>
  </target>
  <target name="buildzlib">
    <echo message="Building ${zlib.dir}" level="info"/>
    <echo message="Unpacking ${zlib.file}" level="info"/>
    <exec executable="tar" failonerror="true">
      <arg value="-xf"/>
      <arg value="${zlib.file}"/>
    </exec>
    <echo message="Configuring ${zlib.dir}" level="info"/>
    <exec executable="bash" dir="${zlib.dir}" failonerror="true">
      <env key="CFLAGS" value="${cflags} -fPIC"/>
      <env key="CPPFLAGS" value="${cppflags}"/>
      <arg value="configure"/>
      <arg value="--prefix=${install.dir}"/>
      <arg value="--64"/>
      <arg value="--shared"/>
      <arg value="--static"/>
    </exec>
    <echo message="Running 'make'" level="info"/>
    <exec executable="make" dir="${zlib.dir}" failonerror="true">
      <arg value="-j8"/>
    </exec>
    <echo message="Running 'make check'" level="info"/>
    <exec executable="make" dir="${zlib.dir}" failonerror="true">
      <arg value="check"/>
    </exec>
    <echo message="Running 'make install'" level="info"/>
    <exec executable="make" dir="${zlib.dir}" failonerror="true">
      <arg value="install"/>
    </exec>
  </target>
</project>
